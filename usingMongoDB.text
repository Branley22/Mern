// 1. Create a database called 'my_first_db'.
use my_first_db

// 2.Create students collection.
db.createCollection("students")

// 3. Each document you insert into this collection should have the following format: {name: STRING, home_state: STRING, lucky_number: NUMBER, birthday: {month: NUMBER, day: NUMBER, year: NUMBER}}

db.students.insert({name: "kylo", home_state: "new york", lucky_number: 2, birthday: {month: 8, day: 12, year: 1992}})

> db.students.insert({name: "branley", home_state: "florida", lucky_number: 3, birthday: {month: 6, day: 18, year: 1998}})

> db.students.insert({name: "Paul", home_state: "Eygpt", lucky_number: 1, birthday: {month: 12, day: 28, year: 1298}})

> db.students.insert({name: "val", home_state: "california", lucky_number: 15, birthday: {month: 1, day: 22, year: 1938}})

> db.students.insert({name: "greg", home_state: "washington", lucky_number: 10, birthday: {month: 8, day: 3, year: 1738}})

// 5. Get all students.
db.students.find()

// 6. Retrieve all students who are from California or Washington
db.students.find({$or: [{home_state:"California"}, {home_state:"Washington"}]})

// 7.1 Greater than 3
db.students.find({lucky_number:{$gt:3}})

// 7.2 Less than or equal to 10
db.students.find({lucky_number:{$lte:10}})

// 7.3 Between 1 and 9, inclusive
db.students.find({$and:[{lucky_number:{$lte:9}}, {lucky_number:{$gte:1}}]})

// 8. Add a field in each student collection called 'interests' that is an ARRAY.  It should contain the following entries: 'coding', 'brunch', 'MongoDB'. Do this in ONE operation.
db.students.update({},{$set: {"interests":['coding', 'brunch', 'MongoDB']}},{multi:true})

// 9. Add some unique interests for each particular students into each of their interest arrays.
> db.students.update({name: "kylo"},{$push: {interests:{each:["working out", "skating"]}}})

> db.students.update({name: "branley"},{$push: {interests:{each:["reading", "flying"]}}})

> db.students.update({name: "Paul"},{$push: {interests:{each:["crying", "losing"]}}})

> db.students.update({name: "val"},{$push: {interests:{each:["coding", "fishing"]}}})

> db.students.update({name: "greg"},{$push: {interests:{each:["coding", "hiking"]}}})




// 10. Add the interest 'taxes' into someone's interest array.
 db.students.update({name: "Paul"}, {$push: {interests: "taxes"}})


// 11. Remove the 'taxes' interest you just added.
 db.students.update({name: "Paul"},{$pull: {interests: "taxes"}})

// 12. Remove all students who are from California.
db.students.remove({home_state:"california"})


// 13. Remove a user by name. 
db.students.remove({name:"Paul"})

// 14. Remove a student whose lucky number is greater than 5 (JUST ONE)
db.students.remove({lucky_number: {$gt:5}}, {justOne:true})

// 15. Add a field in each student collection called 'number_of_belts' and set it to 0.
db.students.update({},{$set: {"number_of_belts":0}},{multi:true})

// 16. Increment this field by 1 for all students in Washington
db.students.update({home_state: "Washington"},{$inc: {number_of_belts: 1}},{multi:true})

// 17. Rename the 'number_of_belts' field to 'belts_earned'
db.students.update({}, {$rename: {"number_of_belts":"belts_earned"}})

// 18. Remove the 'lucky_number' field.
db.students.update({}, {$unset:{lucky_number:""}},{multi:true})

// 19. Add a 'updated_on' field, and set the value as the current date.
db.students.update({}, {$currentDate:{updated_on:true}},{multi:true})